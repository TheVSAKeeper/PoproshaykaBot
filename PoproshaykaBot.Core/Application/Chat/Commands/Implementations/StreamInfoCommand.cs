using PoproshaykaBot.Core.Application.Streaming;
using PoproshaykaBot.Core.Domain.Models.Chat;
using PoproshaykaBot.Core.Domain.Models.Stream;

namespace PoproshaykaBot.Core.Application.Chat.Commands.Implementations;

public sealed class StreamInfoCommand(StreamStatusManager streamStatusManager) : IChatCommand
{
    public string Canonical => "—Å—Ç—Ä–∏–º";
    public IReadOnlyCollection<string> Aliases => ["stream", "–æ–Ω–ª–∞–π–Ω", "–æ–Ω"];
    public string Description => "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å—Ç—Ä–∏–º–µ";

    public bool CanExecute(CommandContext context)
    {
        return true;
    }

    public OutgoingMessage Execute(CommandContext context)
    {
        var info = streamStatusManager.CurrentStream;

        if (info == null)
        {
            var text = streamStatusManager.CurrentStatus == StreamStatus.Online
                ? "–°—Ç—Ä–∏–º –æ–Ω–ª–∞–π–Ω, –Ω–æ –¥–µ—Ç–∞–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
                : "–°–µ–π—á–∞—Å —Å—Ç—Ä–∏–º –æ—Ñ–ª–∞–π–Ω";

            return OutgoingMessage.Reply(text, context.MessageId);
        }

        var duration = DateTime.UtcNow - info.StartedAt;
        var hours = (int)duration.TotalHours;
        var minutes = duration.Minutes;

        var title = string.IsNullOrWhiteSpace(info.Title) ? "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è" : info.Title;
        var game = string.IsNullOrWhiteSpace(info.GameName) ? "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" : info.GameName;

        var textFull = $"üî¥ {title} | –ò–≥—Ä–∞: {game} | –ó—Ä–∏—Ç–µ–ª–µ–π: {info.ViewerCount} | –í —ç—Ñ–∏—Ä–µ: {hours:0}—á {minutes:00}–º";
        return OutgoingMessage.Reply(textFull, context.MessageId);
    }
}
